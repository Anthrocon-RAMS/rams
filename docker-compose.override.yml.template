# Usage instructions
# 0. Stop any other containers as they all share the same port
# 1. Download all plugins into one root directory; multiple event plugins can live side-by-side
# 2. For each event you want to develop for, create `development-EVENTNAME.ini` in this directory
#    where EVENTNAME matches the name of the event plugin, e.g., magprime. The new file does not need to contain anything.
# 3. Copy this template file to docker-compose.override.yml
# 4. (Optional) If largely working on one event, set up EVENTNAME, EVENT, and YEAR env variables (e.g., magprime, super, 2024) in your bash profile.
# 5. Run `docker compose -p $EVENTNAME --profile dev up -d`
# 6. Run `env CONFIG_CMD="/usr/local/bin/rebuild-config.sh git $EVENT $YEAR" bash -c 'docker compose -p $EVENTNAME exec web $CONFIG_CMD exec celery-worker $CONFIG_CMD exec celery-beat $CONFIG_CMD'`
#    where EVENT is the config folder name (e.g., `stock` not `magstock`) and year is the config year (e.g., 2023)
# 7. Run `docker compose -p $EVENTNAME restart`
#
# Repeat step 6 whenever you want to reset your config; it will pull from uber-development.ini.template, then the git repo
# When you want into the Python REPL, run `docker compose -p $EVENTNAME restart python-repl && docker attach $EVENTNAME-python-repl`

x-dev-volumes:
  volumes:
    - &extra-plugin-1 $PWD/../${COMPOSE_PROJECT_NAME}/:/app/plugins/${COMPOSE_PROJECT_NAME}
    - &config-file $PWD/development-${COMPOSE_PROJECT_NAME}.ini:/app/plugins/uber/development.ini

services:
  python-repl:
    container_name: ${COMPOSE_PROJECT_NAME}-python-repl
    build: .
    volumes:
      - $PWD:/app/plugins/uber
      - *extra-plugin-1
      - *config-file
      - $PWD/.pythonstartup.py:/app/.pythonstartup.py
    stdin_open: true
    tty: true
    environment:
      - DB_CONNECTION_STRING=postgresql://uber_db:uber_db@db:5432/uber_db
      - PYTHONSTARTUP=/app/.pythonstartup.py
    command: ['/app/env/bin/python3']
    profiles: ["dev"]
    stop_grace_period: 1s
  web:
    extends:
      file: docker-compose.yml
      service: web
    # Uncomment the environment settings below to automatically pull config from a git repo
    # This will ALWAYS UNDO any local changes you make to development.ini
    # Be sure to set your UBER_CONFIG_EVENT and UBER_CONFIG_YEAR env variables to match the folders in your git repo
    #
    #environment:
    #  - UBERSYSTEM_GIT_CONFIG=https://github.com/magfest/terraform-aws-magfest.git
    #  - UBERSYSTEM_GIT_CONFIG_PATHS=uber_config/environments/dev uber_config/events/${UBER_CONFIG_EVENT:-super}/${UBER_CONFIG_YEAR:-2024}
    volumes:
      - *extra-plugin-1
      - *config-file
  celery-beat:
    extends:
      file: docker-compose.yml
      service: celery-beat
    volumes:
      - *extra-plugin-1
      - *config-file
  celery-worker:
    extends:
      file: docker-compose.yml
      service: celery-worker
    volumes:
      - *extra-plugin-1
      - *config-file
