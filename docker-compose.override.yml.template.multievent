### Multi-event containers
# This is a special override template intended for anyone that wants to easily swap development between different events.
# The way it works is that you download all your event plugins alongside this repo's folder, then use docker compose project
# names to maintain a set of containers for each event, each of which mounts a different event plugin as a volume.
#
# This is a pretty advanced setup that only a few people will find useful -- see other docs if you are not one of those people.
# In the instructions below, EVENTNAME refers to the name of the event plugin repo, e.g., magprime, magstock, or magwest

## Setup
# 1. Download all plugins into one root directory that contains this repo.
# 2. Run make_config.py to pull down config for one event, e.g., `python3 make_config.py --repo https://github.com/magfest/terraform-aws-magfest.git --paths uber_config/environments/prod uber_config/events/stock/2024`
# 3. Rename `uber.ini` to `config-EVENTNAME.ini`.
# 4. Rename `EVENTNAME.ini` to `config.ini` and move it into its root plugin directory, e.g., magstock/config.ini
# 5. Repeat steps 2-4 for each event you're going to work on.
# 6. Copy this template file to docker-compose.override.yml
# 7. If needed, add or edit one of the `&plugin-config-file` settings to be your own EVENTNAME in all caps. Don't worry about the plugin config files you aren't using, they get ignored.

## Running Containers
# 0. Stop any other containers as they all share the same port.
# 1. Set an environment variable to the event you'll be working on, e.g., `export EVENTNAME=magstock`
# 2. Run `docker compose -p $EVENTNAME --profile dev up -d`
# 3. Run `docker compose -p $EVENTNAME restart` (or, e.g., restart web) when you need to restart one or more containers.
# 4. Run `docker compose -p $EVENTNAME restart python-repl && docker attach $EVENTNAME-python-repl` if you need a Python REPL.


x-dev-volumes:
  volumes:
    - &extra-plugin $PWD/../${COMPOSE_PROJECT_NAME}/:/app/plugins/${COMPOSE_PROJECT_NAME}
  environment:
    - &uber-config-file UBER_CONFIG_FILES=config-${COMPOSE_PROJECT_NAME}.ini
    - &plugin-config-file-1 MAGSTOCK_CONFIG_FILES=config.ini
    - &plugin-config-file-2 MAGWEST_CONFIG_FILES=config.ini
    - &plugin-config-file-3 MAGPRIME_CONFIG_FILES=config.ini

services:
  python-repl:
    extends:
      file: docker-compose.yml
      service: python-repl
    container_name: ${COMPOSE_PROJECT_NAME}-python-repl
    volumes:
      - *extra-plugin
    environment:
      - *uber-config-file
      - *plugin-config-file-1
      - *plugin-config-file-2
      - *plugin-config-file-3
  flower:
    extends:
        file: docker-compose.yml
        service: flower
    container_name: ${COMPOSE_PROJECT_NAME}-flower
  web:
    extends:
      file: docker-compose.yml
      service: web
    volumes:
      - *extra-plugin
    environment:
      - *uber-config-file
      - *plugin-config-file-1
      - *plugin-config-file-2
      - *plugin-config-file-3
  celery-beat:
    extends:
      file: docker-compose.yml
      service: celery-beat
    volumes:
      - *extra-plugin
    environment:
      - *uber-config-file
      - *plugin-config-file-1
      - *plugin-config-file-2
      - *plugin-config-file-3
  celery-worker:
    extends:
      file: docker-compose.yml
      service: celery-worker
    volumes:
      - *extra-plugin
    environment:
      - *uber-config-file
      - *plugin-config-file-1
      - *plugin-config-file-2
      - *plugin-config-file-3
